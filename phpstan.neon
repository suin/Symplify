includes:
    - 'packages/PHPStanExtensions/config/config.neon'
    - 'vendor/thecodingmachine/phpstan-strict-rules/phpstan-strict-rules.neon'
    - 'vendor/thecodingmachine/phpstan-safe-rule/phpstan-safe-rule.neon'

parameters:
    level: max
    reportUnmatchedIgnoredErrors: false

    excludes_analyse:
        - *packages/MonorepoBuilder/packages/Init/templates/*
        - *packages/CodingStandard/tests/**/correct*
        - *packages/CodingStandard/tests/**/wrong*
        - *packages/CodingStandard/tests/Fixer/Order/MethodOrderByTypeFixer/Wrong/*
        # tests
        - packages/PHPStanExtensions/tests/Rules/Classes/Source/ClassWithConstants.php
        - packages/EasyCodingStandard/tests/Finder/FinderSanitizerSource/NestedDirectory/FileWithClass.php
        - packages/EasyCodingStandard/packages/SniffRunner/tests/Application/FileProcessorSource/ReferenceUsedNamesOnlySniff/
        - packages/TokenRunner/tests/Wrapper/FixerWrapper/ClassWrapper/Source/AbstractSomeClass.php
        # Symfony workaround
        - packages/ChangelogLinker/src/DependencyInjection/Dummy/ResolveAutowiringExceptionHelper.php

    autoload_files:
        - %currentWorkingDirectory%/tests/bootstrap.php
        - packages/EasyCodingStandard/packages/ChangedFilesDetector/tests/ChangedFilesDetectorSource/OneClass.php
        - packages/EasyCodingStandard/tests/Finder/SourceFinderSource/Source/SomeClass.php

    ignoreErrors:
        # temporary
        - '#Parameter \#1 \$e of method Symfony\\Component\\Console\\Application::renderException\(\) expects Exception, Throwable given#'

        - '#Symplify\\EasyCodingStandard\\SniffRunner\\File\\File::__construct\(\) does not call parent constructor from PHP_CodeSniffer\\Files\\File#'

        # lvl 7
        - '#Parameter \#2 \$config of class PHP_CodeSniffer\\Tokenizers\\PHP constructor expects PHP_CodeSniffer\\Config\|null, PHP_CodeSniffer\\Config\|stdClass given#'
        - '#Parameter \#1 \$id of class Symfony\\Component\\DependencyInjection\\Reference constructor expects string, string\|null given#'

        # is valid code, known values
        - '#Method Symplify\\MonorepoBuilder\\ComposerJsonDecorator\\AutoloadRelativePathComposerJsonDecorator::prefixPath\(\) should return array<string>\|string but returns array<array<string>\|string>#'
        - '#Access to an undefined property PHPStan\\PhpDocParser\\Ast\\(Type\\TypeNode::\$name|PhpDoc\\PhpDocTagValueNode::\$type)#'

        - '#Parameter \#3 \$end of method PHP_CodeSniffer\\Files\\File::findNext\(\) expects int\|null, bool\|int given#'
        - '#Parameter \#1 \$generatorFiles of method Symplify\\Statie\\Generator\\Contract\\ObjectSorterInterface::sort\(\) expects array<Symplify\\Statie\\Generator\\Renderable\\File\\AbstractGeneratorFile>, array<Symplify\\Statie\\Renderable\\File\\AbstractFile> given#'
        - '#Method Symplify\\PackageBuilder\\DependencyInjection\\CompilerPass\\AutowireSinglyImplementedCompilerPass::filterSinglyImplementedInterfaces\(\) should return array<string> but returns array<int\|string, int\|string>#'

        # invalid 3rd party-code
        - '#Call to an undefined method Psr\\Cache\\CacheItemInterface::tag\(\)#'
        - '#Parameter \#1 \$types of method PHP_CodeSniffer\\Files\\File::findNext\(\) expects array\|int, string given#'

        - '#Parameter \#1 \$index of method PhpCsFixer\\Tokenizer\\Tokens::getNextTokenOfKind\(\) expects int, int\\|null given#'
        - '#Parameter \#2 \$start of method PHP_CodeSniffer\\Files\\File::findNext\(\) expects int, int\|true given#'
        - '#Variable \$processedFileContent might not be defined#'
        - '#Property Symplify\\TokenRunner\\Wrapper\\FixerWrapper\\ClassWrapper::\$startBracketIndex \(int\) does not accept int\|null#'
        - '#Method Symplify\\Statie\\Latte\\Tests\\Renderable\\LatteFileDecoratorTest::createFileFromFilePath\(\) should return Symplify\\Statie\\Renderable\\File\\File but returns Symplify\\Statie\\Renderable\\File\\AbstractFile#'

        # known values
        - '#Parameter \#2 \$start of method PHP_CodeSniffer\\Files\\File::findNext\(\) expects int, bool\|int given#'
        - '#Parameter \#3 \$end of method PHP_CodeSniffer\\Files\\File::findNext\(\) expects int\|null, int\|true given#'

        # Token Runner
        - '#Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getParameterBag()#'

        # buggy
        - '#Symplify\\EasyCodingStandard\\Contract\\Application\\DualRunInterface#'

        # object
        - '#does not accept object#'
        - '#Call to an undefined method object#'

        # waits for "safe" function calls
        - '#Method Symplify\\EasyCodingStandardTester\\Testing\\AbstractCheckerTestCase::getConfigHash\(\) should return string but returns string\|false#'

        # intersect/union buggy
        - '#Parameter \#(2|3) \$items of method PhpCsFixer\\Tokenizer\\Tokens::(insertAt|overrideRange)\(\) expects (\()?iterable<PhpCsFixer\\Tokenizer\\Token>&PhpCsFixer\\Tokenizer\\Tokens(\))?(\|PhpCsFixer\\Tokenizer\\Token)?, array<(int, )?PhpCsFixer\\Tokenizer\\Token> given#'
        - '#expects Symfony\\Component\\DependencyInjection\\ContainerBuilder, Symfony\\Component\\DependencyInjection\\ContainerInterface given#'
        - '#Method (.*) should return (Symfony\\Component\\DependencyInjection\\ContainerInterface|Psr\\Container\\ContainerInterface) but returns Symfony\\Component\\DependencyInjection\\ContainerInterface\|null#'

        # phpstan 0.10 news
        - '#Cannot access property \$type on PHPStan\\PhpDocParser\\Ast\\PhpDoc\\VarTagValueNode\|null#'
        - '#Parameter \#1 \$children of class PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocNode constructor expects array<PHPStan\\PhpDocParser\\Ast\\PhpDoc\\PhpDocChildNode>, array<int, PHPStan\\PhpDocParser\\Ast\\Node> given#'
        - '#Property Symplify\\BetterPhpDocParser\\Printer\\PhpDocInfoPrinter::\$nodeWithPositionsObjectStorage \(iterable<Symplify\\BetterPhpDocParser\\PhpDocNodeInfo>\&Symplify\\BetterPhpDocParser\\PhpDocParser\\Storage\\NodeWithPositionsObjectStorage\) does not accept Symplify\\BetterPhpDocParser\\PhpDocParser\\Storage\\NodeWithPositionsObjectStorage#'
        - '#Cannot access property \$name on PHPStan\\PhpDocParser\\Ast\\Type\\TypeNode\|null#'
        - '#If condition is always true#'
        - '#Cannot call method contains\(\) on array<array<string>>\|SplObjectStorage#'
        - '#Cannot call method attach\(\) on array<array<string>>\|SplObjectStorage#'
        - "#Casting to array something that's already array#"
        - '#Property Symplify\\EasyCodingStandard\\Yaml\\CheckerServiceParametersShifter::\$serviceKeywords \(array<string>\) does not accept ReflectionProperty#'
        - '#Method Symplify\\EasyCodingStandard\\Tests\\Indentation\\IndentationTest::getIndentationTypeFixerFromContainer\(\) should return PhpCsFixer\\Fixer\\Whitespace\\IndentationTypeFixer but returns PhpCsFixer\\Fixer\\FixerInterface\|null#'
        - '#Parameter \#1 \$path of function dirname expects string, string\|false given#'
        - '#Method Symplify\\PackageBuilder\\Console\\Command\\CommandNaming::getShortClassName\(\) should return string but returns string\|null#'
        - '#Cannot access offset (.*?) on Symplify\\Statie\\Generator\\Renderable\\File\\AbstractGeneratorFile#'
        - '#Parameter \#1 \$stack of function array_pop expects array, array<int, string>\|false given#'
        - '#Cannot call method getContent\(\) on Symplify\\Statie\\Renderable\\File\\AbstractFile\|null#'
        - '#Cannot call method getStart\(\) on Symplify\\TokenRunner\\Analyzer\\FixerAnalyzer\\BlockInfo\|null#'
        - '#Method Symplify\\TokenRunner\\Analyzer\\SnifferAnalyzer\\CognitiveComplexityAnalyzer::getMeasuredNestingLevel\(\) should return int but returns float\|int#'

        # mixed type
        - '#Call to an undefined method Psr\\Container\\ContainerInterface::getParameter\(\)#'

        # false positives
        - '#Call to function method_exists\(\) with (.*?) and (.*?)fromShellCommandline(.*?) will always evaluate to false#'
        - '#Method Symplify\\PackageBuilder\\DependencyInjection\\CompilerPass\\AutoReturnFactoryCompilerPass::findFactoriesWithoutUsage\(\) should return array<string> but returns array<int, string\|null>#'
        - '#Array \(array<string>\) does not accept string\|null#'

        # variadic
        - '#In method (.*?), parameter (.*?) can be type-hinted to "array"#'
        - '#PHPDoc tag \@param for parameter (.*?) with type array is not subtype of native type array<int, mixed>#'

        # mixed up iterables
        - '#Parameter \#1 \$files of method Symplify\\EasyCodingStandard\\Finder\\FinderSanitizer\:\:sanitize\(\) expects \(iterable<SplFileInfo\|string\>&Nette\\Utils\\Finder\)\|Symfony\\Component\\Finder\\Finder, (array<int, SplFileInfo\>|iterable<SplFileInfo\|string>) given#'
        - '#Parameter \#1 \$files of method Symplify\\PackageBuilder\\FileSystem\\FinderSanitizer::sanitize\(\) expects \(iterable<SplFileInfo|string>&Nette\\Utils\\Finder\)\|Symfony\\Component\\Finder\\Finder, array<int, SplFileInfo> given#'
        - '#Method Symplify\\BetterPhpDocParser\\DependencyInjection\\ContainerFactory::create\(\) should return Psr\\Container\\ContainerInterface but returns Symfony\\Component\\DependencyInjection\\ContainerInterface\|null#'

        # intentionally
        - '#Empty catch block#'
        - '#In method (.*?), caught "Throwable" must be rethrown. Either catch a more specific exception or add a "throw" clause in the "catch" block to propagate the exception#'

        # not for a BC
        - '#In method "Symplify\\EasyCodingStandard\\Contract\\Finder\\CustomSourceProviderInterface::find", a "iterable\<SplFileInfo\|string\>" return type can be added#'

        # unclear
        - '#Parameter \#1 \$string of function strlen expects string, string\|false given#'

        # Symfony 4.2 typehint BC-break
        - '#Parameter \#1 \$command of class Symfony\\Component\\Process\\Process constructor expects array, array<string>\|string given#'

        # false positive, known string
        - '#Cannot cast array<string>\|bool\|string\|null to string#'

        # false positive
        - '#Call to an undefined method Psr\\Container\\ContainerInterface::set\(\)#'
        - '#Cannot call method toString\(\) on PhpParser\\Node\\Identifier\|PhpParser\\Node\\Name\|PhpParser\\Node\\NullableType\|null#'
        # overcomplicated
        - '#Cannot cast PhpParser\\Node\\Expr\|string to string#'
        - '#Call to an undefined method PhpParser\\Node\\Identifier\|PhpParser\\Node\\Name|PhpParser\\Node\\NullableType::toString\\()#'
        - '#Method Symplify\\PHPStanExtensions\\Rules\\Methods\\AbstractionOverImplementationRule::selectPreferredInterface\(\) should return string but returns string\|null#'

services:
    -
        class: Symplify\PHPStanExtensions\Type\SplFileInfoTolerantDynamicMethodReturnTypeExtension
        tags:
            - phpstan.broker.dynamicMethodReturnTypeExtension
